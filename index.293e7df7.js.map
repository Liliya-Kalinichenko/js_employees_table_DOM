{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CCCA,4BAA4B,EAE5B,IAAM,EAAU,CACd,KAAM,OACN,SAAU,WACV,OAAQ,SACR,IAAK,MACL,OAAQ,QACV,EAEM,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAO,SAAS,aAAa,CAAC,SAAS,QAAQ,CAC/C,EAAO,SAAS,aAAa,CAAC,SAAS,QAAQ,CAAC,EAAE,CAClD,EAAmB,CACvB,SAAU,GAAI,MAAO,CACvB,EAEA,EAAK,kBAAkB,CAAC,YACrB,s+BAkCH,IAAM,EAAO,SAAS,aAAa,CAAC,QA+HpC,SAAS,EAAgB,CAAK,CAAE,CAAU,CAAE,CAAa,EACvD,GAAI,EAAc,UAAU,CAAC,KAAM,CACjC,IAAM,EAAa,IAAwC,MAAA,CAArC,CAAC,EAAM,KAAK,CAAC,cAAc,CAAC,SAElD,CAAA,EAAW,SAAS,CAAG,EAAU,MAAM,CAAG,EAAI,EAAY,CAC5D,MACE,EAAW,SAAS,CAAG,EAAM,KAAK,CAAC,IAAI,IAAM,CAEjD,CAEA,SAAS,EAAM,CAAG,EAChB,MAAO,CAAC,EAAI,KAAK,CAAC,GAAG,UAAU,CAAC,IAAK,GACvC,CAEA,SAAS,EAAiB,CAAI,CAAE,CAAK,EACnC,IAAM,EAAe,SAAS,aAAa,CAAC,iBAE5C,EAAa,SAAS,CAAC,GAAG,CAAC,GAC3B,EAAa,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAG,EACrC,EAAa,MAAM,CAAG,CAAA,EAEtB,WAAW,WACT,EAAa,SAAS,CAAC,MAAM,CAAC,GAC9B,EAAa,MAAM,CA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n/* eslint-disable no-shadow */ var HEADERS = {\n    name: \"Name\",\n    position: \"Position\",\n    office: \"Office\",\n    age: \"Age\",\n    salary: \"Salary\"\n};\nvar body = document.querySelector(\"body\");\nvar tbody = document.querySelector(\"tbody\");\nvar list = document.querySelector(\"tbody\").children;\nvar head = document.querySelector(\"thead\").children[0];\nvar currentSortState = {\n    sortedBy: \"\",\n    order: 1\n};\nbody.insertAdjacentHTML(\"beforeend\", '<form action=\"post\" class=\"new-employee-form\">\\n  <label>\\n    Name:\\n    <input type=\"text\" data-qa=\"name\" name=\"name\" required>\\n  </label>\\n  <label>\\n    Position:\\n    <input type=\"text\" data-qa=\"position\" name=\"position\" required>\\n  </label>\\n  <label for=\"\">Office:\\n    <select data-qa=\"office\" name=\"office\">\\n      <option value=\"Tokyo\">Tokyo</option>\\n      <option value=\"Singapore\">Singapore</option>\\n      <option value=\"London\">London</option>\\n      <option value=\"New York\">New York</option>\\n      <option value=\"Edinburgh\">Edinburgh</option>\\n      <option value=\"San Francisco\">San Francisco</option>\\n    </select>\\n  </label>\\n  <label>\\n    Age:\\n    <input type=\"number\" data-qa=\"age\" name=\"age\" required>\\n  </label>\\n  <label>\\n    Salary:\\n    <input type=\"number\" data-qa=\"salary\" name=\"salary\" required>\\n  </label>\\n  <button type=\"submit\">Save to table</button>\\n</form>\\n<div class=\"notification\" data-qa=\"notification\" hidden>\\n  <p class=\"title\"></p>\\n</div>');\nvar form = document.querySelector(\"form\");\ntbody.addEventListener(\"click\", handleSelectRow);\nhead.addEventListener(\"click\", handleSortClick);\nform.addEventListener(\"submit\", handleSubmit);\ntbody.addEventListener(\"dblclick\", handleCellEdit);\nfunction handleSelectRow(e) {\n    var currentRow = e.target.parentElement;\n    _to_consumable_array(list).forEach(function(row) {\n        row.classList = \"\";\n    });\n    currentRow.classList.add(\"active\");\n}\nfunction handleSortClick(header) {\n    var _tbody;\n    var index = _to_consumable_array(head.children).indexOf(header.target);\n    currentSortState.order = currentSortState.order > 0 ? -1 : 1;\n    var order = currentSortState.sortedBy === header.target.innerText ? currentSortState.order : 1;\n    var sortedList = _to_consumable_array(list).sort(function(a, b) {\n        var rowA = a.children[index].innerText;\n        var rowB = b.children[index].innerText;\n        switch(header.target.innerText){\n            case HEADERS.name:\n                currentSortState.sortedBy = HEADERS.name;\n                return rowA.localeCompare(rowB) * order;\n            case HEADERS.position:\n                currentSortState.sortedBy = HEADERS.position;\n                return rowA.localeCompare(rowB) * order;\n            case HEADERS.office:\n                currentSortState.sortedBy = HEADERS.office;\n                return rowA.localeCompare(rowB) * order;\n            case HEADERS.age:\n                currentSortState.sortedBy = HEADERS.age;\n                return (+rowA - +rowB) * order;\n            case HEADERS.salary:\n                currentSortState.sortedBy = HEADERS.salary;\n                return (toNum(rowA) - toNum(rowB)) * order;\n            default:\n                return 0;\n        }\n    });\n    (_tbody = tbody).replaceChildren.apply(_tbody, _to_consumable_array(sortedList));\n}\nfunction handleSubmit(e) {\n    e.preventDefault();\n    var formData = new FormData(form);\n    var name = formData.get(\"name\");\n    var position = formData.get(\"position\");\n    var office = formData.get(\"office\");\n    var age = formData.get(\"age\");\n    var salary = formData.get(\"salary\");\n    if (name.length < 4) {\n        showNotification(\"error\", \"Name can not be less than 4 characters\");\n        return;\n    }\n    if (age < 18 || age > 90) {\n        showNotification(\"error\", \"Please enter correct age\");\n        return;\n    }\n    tbody.insertAdjacentHTML(\"beforeend\", \"<tr>\\n    <td>\".concat(name, \"</td>\\n    <td>\").concat(position, \"</td>\\n    <td>\").concat(office, \"</td>\\n    <td>\").concat(age, \"</td>\\n    <td>$\").concat(parseFloat(salary).toLocaleString(\"en-US\"), \"</td>\\n  </tr>\"));\n    showNotification(\"success\", \"Employee was successfully added\");\n    form.reset();\n}\nfunction handleCellEdit(e) {\n    var editedCell = e.target;\n    var originalValue = editedCell.innerText;\n    var newInput = document.createElement(\"input\");\n    var newInputType = Number.isNaN(toNum(editedCell.innerText)) ? \"text\" : \"number\";\n    newInput.classList.add(\"cell-input\");\n    newInput.value = originalValue;\n    newInput.setAttribute(\"type\", newInputType);\n    editedCell.innerText = \"\";\n    editedCell.append(newInput);\n    newInput.focus();\n    newInput.addEventListener(\"blur\", function() {\n        handleEditInput(newInput, editedCell, originalValue);\n    });\n    newInput.addEventListener(\"keypress\", function(e) {\n        if (e.key === \"Enter\") handleEditInput(newInput, editedCell, originalValue);\n    });\n}\nfunction handleEditInput(input, editedCell, originalValue) {\n    if (originalValue.startsWith(\"$\")) {\n        var newSalary = \"$\".concat(+input.value.toLocaleString(\"en-US\"));\n        editedCell.innerText = newSalary.length > 2 ? newSalary : originalValue;\n    } else editedCell.innerText = input.value.trim() || originalValue;\n}\nfunction toNum(str) {\n    return +str.slice(1).replaceAll(\",\", \"\");\n}\nfunction showNotification(type, title) {\n    var notification = document.querySelector(\".notification\");\n    notification.classList.add(type);\n    notification.children[0].innerText = title;\n    notification.hidden = false;\n    setTimeout(function() {\n        notification.classList.remove(type);\n        notification.hidden = true;\n    }, 3000);\n}\n\n//# sourceMappingURL=index.293e7df7.js.map\n","'use strict';\n/* eslint-disable no-shadow */\n\nconst HEADERS = {\n  name: 'Name',\n  position: 'Position',\n  office: 'Office',\n  age: 'Age',\n  salary: 'Salary',\n};\n\nconst body = document.querySelector('body');\nconst tbody = document.querySelector('tbody');\nconst list = document.querySelector('tbody').children;\nconst head = document.querySelector('thead').children[0];\nconst currentSortState = {\n  sortedBy: '', order: 1,\n};\n\nbody.insertAdjacentHTML('beforeend',\n  `<form action=\"post\" class=\"new-employee-form\">\n  <label>\n    Name:\n    <input type=\"text\" data-qa=\"name\" name=\"name\" required>\n  </label>\n  <label>\n    Position:\n    <input type=\"text\" data-qa=\"position\" name=\"position\" required>\n  </label>\n  <label for=\"\">Office:\n    <select data-qa=\"office\" name=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>\n    Age:\n    <input type=\"number\" data-qa=\"age\" name=\"age\" required>\n  </label>\n  <label>\n    Salary:\n    <input type=\"number\" data-qa=\"salary\" name=\"salary\" required>\n  </label>\n  <button type=\"submit\">Save to table</button>\n</form>\n<div class=\"notification\" data-qa=\"notification\" hidden>\n  <p class=\"title\"></p>\n</div>`,\n);\n\nconst form = document.querySelector('form');\n\ntbody.addEventListener('click', handleSelectRow);\nhead.addEventListener('click', handleSortClick);\nform.addEventListener('submit', handleSubmit);\ntbody.addEventListener('dblclick', handleCellEdit);\n\nfunction handleSelectRow(e) {\n  const currentRow = e.target.parentElement;\n\n  [...list].forEach(row => {\n    row.classList = '';\n  });\n  currentRow.classList.add('active');\n}\n\nfunction handleSortClick(header) {\n  const index = [...head.children].indexOf(header.target);\n\n  currentSortState.order = currentSortState.order > 0 ? -1 : 1;\n\n  const order = currentSortState.sortedBy === header.target.innerText\n    ? currentSortState.order\n    : 1;\n\n  const sortedList = [...list].sort((a, b) => {\n    const rowA = a.children[index].innerText;\n    const rowB = b.children[index].innerText;\n\n    switch (header.target.innerText) {\n      case HEADERS.name:\n        currentSortState.sortedBy = HEADERS.name;\n\n        return rowA.localeCompare(rowB) * order;\n\n      case HEADERS.position:\n        currentSortState.sortedBy = HEADERS.position;\n\n        return rowA.localeCompare(rowB) * order;\n\n      case HEADERS.office:\n        currentSortState.sortedBy = HEADERS.office;\n\n        return rowA.localeCompare(rowB) * order;\n\n      case HEADERS.age:\n        currentSortState.sortedBy = HEADERS.age;\n\n        return (+rowA - +rowB) * order;\n\n      case HEADERS.salary:\n        currentSortState.sortedBy = HEADERS.salary;\n\n        return (toNum(rowA) - toNum(rowB)) * order;\n\n      default:\n        return 0;\n    }\n  });\n\n  tbody.replaceChildren(...sortedList);\n}\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n  const name = formData.get('name');\n  const position = formData.get('position');\n  const office = formData.get('office');\n  const age = formData.get('age');\n  const salary = formData.get('salary');\n\n  if (name.length < 4) {\n    showNotification('error', 'Name can not be less than 4 characters');\n\n    return;\n  }\n\n  if (age < 18 || age > 90) {\n    showNotification('error', 'Please enter correct age');\n\n    return;\n  }\n\n  tbody.insertAdjacentHTML('beforeend',\n    `<tr>\n    <td>${name}</td>\n    <td>${position}</td>\n    <td>${office}</td>\n    <td>${age}</td>\n    <td>$${parseFloat(salary).toLocaleString('en-US')}</td>\n  </tr>`,\n  );\n\n  showNotification('success', 'Employee was successfully added');\n  form.reset();\n}\n\nfunction handleCellEdit(e) {\n  const editedCell = e.target;\n  const originalValue = editedCell.innerText;\n  const newInput = document.createElement('input');\n  const newInputType = Number.isNaN(toNum(editedCell.innerText))\n    ? 'text'\n    : 'number';\n\n  newInput.classList.add('cell-input');\n  newInput.value = originalValue;\n  newInput.setAttribute('type', newInputType);\n\n  editedCell.innerText = '';\n  editedCell.append(newInput);\n\n  newInput.focus();\n\n  newInput.addEventListener('blur', () => {\n    handleEditInput(newInput, editedCell, originalValue);\n  });\n\n  newInput.addEventListener('keypress', (e) => {\n    if (e.key === 'Enter') {\n      handleEditInput(newInput, editedCell, originalValue);\n    }\n  });\n}\n\nfunction handleEditInput(input, editedCell, originalValue) {\n  if (originalValue.startsWith('$')) {\n    const newSalary = `$${+input.value.toLocaleString('en-US')}`;\n\n    editedCell.innerText = newSalary.length > 2 ? newSalary : originalValue;\n  } else {\n    editedCell.innerText = input.value.trim() || originalValue;\n  }\n}\n\nfunction toNum(str) {\n  return +str.slice(1).replaceAll(',', '');\n}\n\nfunction showNotification(type, title) {\n  const notification = document.querySelector('.notification');\n\n  notification.classList.add(type);\n  notification.children[0].innerText = title;\n  notification.hidden = false;\n\n  setTimeout(() => {\n    notification.classList.remove(type);\n    notification.hidden = true;\n  }, 3000);\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","HEADERS","position","office","age","salary","body","document","querySelector","tbody","list","children","head","currentSortState","sortedBy","order","insertAdjacentHTML","form","handleEditInput","input","editedCell","originalValue","startsWith","newSalary","concat","value","toLocaleString","innerText","trim","toNum","str","replaceAll","showNotification","type","title","notification","classList","add","hidden","setTimeout","remove","addEventListener","e","currentRow","target","parentElement","forEach","row","header","index","indexOf","sortedList","sort","a","b","rowA","rowB","localeCompare","replaceChildren","apply","preventDefault","formData","FormData","get","parseFloat","reset","newInput","createElement","newInputType","Number","isNaN","setAttribute","append","focus","key"],"version":3,"file":"index.293e7df7.js.map"}