{"mappings":"AAAA;AACA,4BAA4B,GAE5B,MAAM,UAAU;IACd,MAAM;IACN,UAAU;IACV,QAAQ;IACR,KAAK;IACL,QAAQ;AACV;AAEA,MAAM,OAAO,SAAS,aAAa,CAAC;AACpC,MAAM,QAAQ,SAAS,aAAa,CAAC;AACrC,MAAM,OAAO,SAAS,aAAa,CAAC,SAAS,QAAQ;AACrD,MAAM,OAAO,SAAS,aAAa,CAAC,SAAS,QAAQ,CAAC,EAAE;AACxD,MAAM,mBAAmB;IACvB,UAAU;IAAI,OAAO;AACvB;AAEA,KAAK,kBAAkB,CAAC,aACtB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA+BG,CAAC;AAGP,MAAM,OAAO,SAAS,aAAa,CAAC;AAEpC,MAAM,gBAAgB,CAAC,SAAS;AAChC,KAAK,gBAAgB,CAAC,SAAS;AAC/B,KAAK,gBAAgB,CAAC,UAAU;AAChC,MAAM,gBAAgB,CAAC,YAAY;AAEnC,SAAS,gBAAgB,CAAC;IACxB,MAAM,aAAa,EAAE,MAAM,CAAC,aAAa;IAEzC;WAAI;KAAK,CAAC,OAAO,CAAC,CAAA;QAChB,IAAI,SAAS,GAAG;IAClB;IACA,WAAW,SAAS,CAAC,GAAG,CAAC;AAC3B;AAEA,SAAS,gBAAgB,MAAM;IAC7B,MAAM,QAAQ;WAAI,KAAK,QAAQ;KAAC,CAAC,OAAO,CAAC,OAAO,MAAM;IAEtD,iBAAiB,KAAK,GAAG,iBAAiB,KAAK,GAAG,IAAI,KAAK;IAE3D,MAAM,QAAQ,iBAAiB,QAAQ,KAAK,OAAO,MAAM,CAAC,SAAS,GAC/D,iBAAiB,KAAK,GACtB;IAEJ,MAAM,aAAa;WAAI;KAAK,CAAC,IAAI,CAAC,CAAC,GAAG;QACpC,MAAM,OAAO,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS;QACxC,MAAM,OAAO,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS;QAExC,OAAQ,OAAO,MAAM,CAAC,SAAS;YAC7B,KAAK,QAAQ,IAAI;gBACf,iBAAiB,QAAQ,GAAG,QAAQ,IAAI;gBAExC,OAAO,KAAK,aAAa,CAAC,QAAQ;YAEpC,KAAK,QAAQ,QAAQ;gBACnB,iBAAiB,QAAQ,GAAG,QAAQ,QAAQ;gBAE5C,OAAO,KAAK,aAAa,CAAC,QAAQ;YAEpC,KAAK,QAAQ,MAAM;gBACjB,iBAAiB,QAAQ,GAAG,QAAQ,MAAM;gBAE1C,OAAO,KAAK,aAAa,CAAC,QAAQ;YAEpC,KAAK,QAAQ,GAAG;gBACd,iBAAiB,QAAQ,GAAG,QAAQ,GAAG;gBAEvC,OAAO,AAAC,CAAA,CAAC,OAAO,CAAC,IAAG,IAAK;YAE3B,KAAK,QAAQ,MAAM;gBACjB,iBAAiB,QAAQ,GAAG,QAAQ,MAAM;gBAE1C,OAAO,AAAC,CAAA,MAAM,QAAQ,MAAM,KAAI,IAAK;YAEvC;gBACE,OAAO;QACX;IACF;IAEA,MAAM,eAAe,IAAI;AAC3B;AAEA,SAAS,aAAa,CAAC;IACrB,EAAE,cAAc;IAEhB,MAAM,WAAW,IAAI,SAAS;IAC9B,MAAM,OAAO,SAAS,GAAG,CAAC;IAC1B,MAAM,WAAW,SAAS,GAAG,CAAC;IAC9B,MAAM,SAAS,SAAS,GAAG,CAAC;IAC5B,MAAM,MAAM,SAAS,GAAG,CAAC;IACzB,MAAM,SAAS,SAAS,GAAG,CAAC;IAE5B,IAAI,KAAK,MAAM,GAAG,GAAG;QACnB,iBAAiB,SAAS;QAE1B;IACF;IAEA,IAAI,MAAM,MAAM,MAAM,IAAI;QACxB,iBAAiB,SAAS;QAE1B;IACF;IAEA,MAAM,kBAAkB,CAAC,aACvB,CAAC;QACG,EAAE,KAAK;QACP,EAAE,SAAS;QACX,EAAE,OAAO;QACT,EAAE,IAAI;SACL,EAAE,WAAW,QAAQ,cAAc,CAAC,SAAS;OAC/C,CAAC;IAGN,iBAAiB,WAAW;IAC5B,KAAK,KAAK;AACZ;AAEA,SAAS,eAAe,CAAC;IACvB,MAAM,aAAa,EAAE,MAAM;IAC3B,MAAM,gBAAgB,WAAW,SAAS;IAC1C,MAAM,WAAW,SAAS,aAAa,CAAC;IACxC,MAAM,eAAe,OAAO,KAAK,CAAC,MAAM,WAAW,SAAS,KACxD,SACA;IAEJ,SAAS,SAAS,CAAC,GAAG,CAAC;IACvB,SAAS,KAAK,GAAG;IACjB,SAAS,YAAY,CAAC,QAAQ;IAE9B,WAAW,SAAS,GAAG;IACvB,WAAW,MAAM,CAAC;IAElB,SAAS,KAAK;IAEd,SAAS,gBAAgB,CAAC,QAAQ;QAChC,gBAAgB,UAAU,YAAY;IACxC;IAEA,SAAS,gBAAgB,CAAC,YAAY,CAAC;QACrC,IAAI,EAAE,GAAG,KAAK,SACZ,gBAAgB,UAAU,YAAY;IAE1C;AACF;AAEA,SAAS,gBAAgB,KAAK,EAAE,UAAU,EAAE,aAAa;IACvD,IAAI,cAAc,UAAU,CAAC,MAAM;QACjC,MAAM,YAAY,CAAC,CAAC,EAAE,CAAC,MAAM,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC;QAE5D,WAAW,SAAS,GAAG,UAAU,MAAM,GAAG,IAAI,YAAY;IAC5D,OACE,WAAW,SAAS,GAAG,MAAM,KAAK,CAAC,IAAI,MAAM;AAEjD;AAEA,SAAS,MAAM,GAAG;IAChB,OAAO,CAAC,IAAI,KAAK,CAAC,GAAG,UAAU,CAAC,KAAK;AACvC;AAEA,SAAS,iBAAiB,IAAI,EAAE,KAAK;IACnC,MAAM,eAAe,SAAS,aAAa,CAAC;IAE5C,aAAa,SAAS,CAAC,GAAG,CAAC;IAC3B,aAAa,QAAQ,CAAC,EAAE,CAAC,SAAS,GAAG;IACrC,aAAa,MAAM,GAAG;IAEtB,WAAW;QACT,aAAa,SAAS,CAAC,MAAM,CAAC;QAC9B,aAAa,MAAM,GAAG;IACxB,GAAG;AACL","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n/* eslint-disable no-shadow */\n\nconst HEADERS = {\n  name: 'Name',\n  position: 'Position',\n  office: 'Office',\n  age: 'Age',\n  salary: 'Salary',\n};\n\nconst body = document.querySelector('body');\nconst tbody = document.querySelector('tbody');\nconst list = document.querySelector('tbody').children;\nconst head = document.querySelector('thead').children[0];\nconst currentSortState = {\n  sortedBy: '', order: 1,\n};\n\nbody.insertAdjacentHTML('beforeend',\n  `<form action=\"post\" class=\"new-employee-form\">\n  <label>\n    Name:\n    <input type=\"text\" data-qa=\"name\" name=\"name\" required>\n  </label>\n  <label>\n    Position:\n    <input type=\"text\" data-qa=\"position\" name=\"position\" required>\n  </label>\n  <label for=\"\">Office:\n    <select data-qa=\"office\" name=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>\n    Age:\n    <input type=\"number\" data-qa=\"age\" name=\"age\" required>\n  </label>\n  <label>\n    Salary:\n    <input type=\"number\" data-qa=\"salary\" name=\"salary\" required>\n  </label>\n  <button type=\"submit\">Save to table</button>\n</form>\n<div class=\"notification\" data-qa=\"notification\" hidden>\n  <p class=\"title\"></p>\n</div>`,\n);\n\nconst form = document.querySelector('form');\n\ntbody.addEventListener('click', handleSelectRow);\nhead.addEventListener('click', handleSortClick);\nform.addEventListener('submit', handleSubmit);\ntbody.addEventListener('dblclick', handleCellEdit);\n\nfunction handleSelectRow(e) {\n  const currentRow = e.target.parentElement;\n\n  [...list].forEach(row => {\n    row.classList = '';\n  });\n  currentRow.classList.add('active');\n}\n\nfunction handleSortClick(header) {\n  const index = [...head.children].indexOf(header.target);\n\n  currentSortState.order = currentSortState.order > 0 ? -1 : 1;\n\n  const order = currentSortState.sortedBy === header.target.innerText\n    ? currentSortState.order\n    : 1;\n\n  const sortedList = [...list].sort((a, b) => {\n    const rowA = a.children[index].innerText;\n    const rowB = b.children[index].innerText;\n\n    switch (header.target.innerText) {\n      case HEADERS.name:\n        currentSortState.sortedBy = HEADERS.name;\n\n        return rowA.localeCompare(rowB) * order;\n\n      case HEADERS.position:\n        currentSortState.sortedBy = HEADERS.position;\n\n        return rowA.localeCompare(rowB) * order;\n\n      case HEADERS.office:\n        currentSortState.sortedBy = HEADERS.office;\n\n        return rowA.localeCompare(rowB) * order;\n\n      case HEADERS.age:\n        currentSortState.sortedBy = HEADERS.age;\n\n        return (+rowA - +rowB) * order;\n\n      case HEADERS.salary:\n        currentSortState.sortedBy = HEADERS.salary;\n\n        return (toNum(rowA) - toNum(rowB)) * order;\n\n      default:\n        return 0;\n    }\n  });\n\n  tbody.replaceChildren(...sortedList);\n}\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n  const name = formData.get('name');\n  const position = formData.get('position');\n  const office = formData.get('office');\n  const age = formData.get('age');\n  const salary = formData.get('salary');\n\n  if (name.length < 4) {\n    showNotification('error', 'Name can not be less than 4 characters');\n\n    return;\n  }\n\n  if (age < 18 || age > 90) {\n    showNotification('error', 'Please enter correct age');\n\n    return;\n  }\n\n  tbody.insertAdjacentHTML('beforeend',\n    `<tr>\n    <td>${name}</td>\n    <td>${position}</td>\n    <td>${office}</td>\n    <td>${age}</td>\n    <td>$${parseFloat(salary).toLocaleString('en-US')}</td>\n  </tr>`,\n  );\n\n  showNotification('success', 'Employee was successfully added');\n  form.reset();\n}\n\nfunction handleCellEdit(e) {\n  const editedCell = e.target;\n  const originalValue = editedCell.innerText;\n  const newInput = document.createElement('input');\n  const newInputType = Number.isNaN(toNum(editedCell.innerText))\n    ? 'text'\n    : 'number';\n\n  newInput.classList.add('cell-input');\n  newInput.value = originalValue;\n  newInput.setAttribute('type', newInputType);\n\n  editedCell.innerText = '';\n  editedCell.append(newInput);\n\n  newInput.focus();\n\n  newInput.addEventListener('blur', () => {\n    handleEditInput(newInput, editedCell, originalValue);\n  });\n\n  newInput.addEventListener('keypress', (e) => {\n    if (e.key === 'Enter') {\n      handleEditInput(newInput, editedCell, originalValue);\n    }\n  });\n}\n\nfunction handleEditInput(input, editedCell, originalValue) {\n  if (originalValue.startsWith('$')) {\n    const newSalary = `$${+input.value.toLocaleString('en-US')}`;\n\n    editedCell.innerText = newSalary.length > 2 ? newSalary : originalValue;\n  } else {\n    editedCell.innerText = input.value.trim() || originalValue;\n  }\n}\n\nfunction toNum(str) {\n  return +str.slice(1).replaceAll(',', '');\n}\n\nfunction showNotification(type, title) {\n  const notification = document.querySelector('.notification');\n\n  notification.classList.add(type);\n  notification.children[0].innerText = title;\n  notification.hidden = false;\n\n  setTimeout(() => {\n    notification.classList.remove(type);\n    notification.hidden = true;\n  }, 3000);\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}